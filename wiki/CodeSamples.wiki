#summary Snippets of code to get you started with TibiaAPI.
#labels Featured,Phase-Implementation

=== Table of Contents ===
 * [CodeSamples#Get_a_client_object_to_work_with Get a client object to work with]
 * [CodeSamples#Getting_player_information_from_the_Tibia_website Getting player information from the Tibia website]
 * [CodeSamples#Parsing_commands_from_the_player Parsing commands from the player]
 * [CodeSamples#Using_the_proxy Using the proxy]
 * [CodeSamples#Perform_name_spy_or_level_spy Perform name spy or level spy]
 * [CodeSamples#Setup_a_global_keyboard_hook Setup a global keyboard hook]
 * [CodeSamples#Connect_to_an_OT_Server Connect to an OT Server]
 * [CodeSamples#Eat_a_mushroom_in_your_inventory Eat a mushroom in your inventory]
 * [CodeSamples#Attack_the_first_rat_found_in_the_battelist Attack the first rat found in the battelist]
 * [CodeSamples#Change_your_players_outfit_type_and_addon Change your players outfit type and addon]
 * [CodeSamples#Replace_all_the_trees_with_small_fir_trees Replace all the trees with small fir trees]
 * [CodeSamples#Make_a_simple_lighthack Make a simple lighthack]
 * [CodeSamples#Draw_players_hitpoints_in_percents_above_his_name Draw players hitpoints in percents above his name]

== Get a client object to work with ==
*C#*
{{{
Client client = Util.ClientChooser.ShowBox();
if (client == null)
{
	MessageBox.Show("No active client.");
	Application.Exit();
}
}}}

*VB.Net*
{{{
client = ClientChooser.ShowBox()
If client Is Nothing Then
	MsgBox("No active client.")
	Application.[Exit]()
End If
}}}
== Getting player information from the Tibia website ==
*C#*
{{{
// Set the textbox uxText to equal the profession of the player Bubble
// This method is asynchronous, that is why we have to supply a 
// callback to get the data. It does not block your GUI if the 
// request take a while.
private void uxButton_Click(object sender, EventArgs e)
{
	Website.LookupPlayer("Bubble", delegate(Website.CharInfo i)
	{
		uxText.Invoke(new EventHandler(delegate
		{
			uxText.Text = i.Profession;
		}));
	});
}
}}}

== Parsing commands from the player ==
*C#*
{{{
// Put this after you start the proxy
client.Proxy.ReceivedPlayerSpeechPacket += (Proxy.PacketListener)ReceivedPlayerSpeechPacket;
}}}
{{{
// This simple example assumes you have a textbox named uxText, 
// to which it will append the command your client sent
private Packet ReceivedPlayerSpeechPacket(Packet packet)
{
	PlayerSpeechPacket p = (PlayerSpeechPacket)packet;
	if (p.Message.StartsWith("/"))
	{
		uxText.Invoke(new EventHandler(delegate
			{
				uxText.AppendText("Command: " + p.Message.Substring(1));
				uxText.AppendText(Environment.NewLine);
				
				// Scroll to the bottom of the text box
				uxText.SelectionStart = uxText.Text.Length;
				uxText.ScrollToCaret();
			}));
			
		// Don't send the command to the server
		return null;
	}
	else
		return packet;
}
}}}

== Using the proxy ==
*C#*
{{{
// Start the proxy and attach event handlers
// Put this in Form_Load
client.StartProxy();
client.Proxy.ServerMessageArrived += new Tibia.Util.Proxy.MessageListener(Proxy_ServerMessageArrived);
client.Proxy.ClientMessageArrived += new Tibia.Util.Proxy.MessageListener(Proxy_ClientMessageArrived);


        // Sample event handlers
        void Proxy_ClientMessageArrived(Tibia.Packets.NetworkMessage message)
        {
            LogPacket(message.Packet, "CLIENT");
        }

        void Proxy_ServerMessageArrived(Tibia.Packets.NetworkMessage message)
        {
            LogPacket(message.Packet, "SERVER");
        }

        private void LogPacket(byte[] packet, string from)
        {
            uxPackets.Invoke(new EventHandler(delegate
            {
                string s = "from " + from + Environment.NewLine;
                s += Packet.ByteArrayToHexString(packet) + Environment.NewLine + Environment.NewLine;
            }));
        }
}}}

== Perform name spy or level spy ==
*C#*
{{{
// Create a new map object
Map map = new Map(client);

// Show names on other floors
map.ShowNames(true);

// Move the screen to the floor below
map.ShowFloor(-1, true);
}}}

*VB.Net*
{{{
' Create a new map object
Dim map As New Map(client)

' Show names on other floors
map.ShowNames(true)

' Move the screen to the floor below
map.ShowFloor(-1, true)
}}}

== Setup a global keyboard hook ==
Put the following in a button's click event. This example captures the hotkey Ctrl + Alt + A in the Tibia client only (doesn't let it go to the client). All other keypresses, client or otherwise, are ignored.

*C#*
{{{
if (!KeyboardHook.Enabled)
{
    KeyboardHook.Enable();
    KeyboardHook.Add(Keys.A, new KeyboardHook.KeyPressed(delegate()
    {
        if (Client.IsActive)
        {
            if (KeyboardHook.Control && KeyboardHook.Alt)
            {
                string text = "You want to capture the hotkey " +
                Tibia.KeyboardHook.KeyToString(Keys.A) + " in Tibia!";
                MessageBox.Show(text);
            	return false;
      	     }
        }
      	return true;
    }));
}
else
{
	KeyboardHook.Disable();
}
}}}

== Connect to an OT Server ==
*C#*
{{{
client.SetOT("radonia.net", 7171);
}}}

*VB.Net*
{{{
client.SetOT("radonia.net", 7171)
}}}

== Eat a mushroom in your inventory ==
*C#*
{{{
Inventory inventory = new Inventory(client);
inventory.findItem(Tibia.Constants.Items.Food.WhiteMushroom).use();
}}}

*VB.Net*
{{{
Dim inventory As New Inventory(client)
inventory.findItem(Tibia.Constants.Items.Food.WhiteMushroom).use()
}}}
Or, more efficiently (using the hotkey packets)

*C#*
{{{
Inventory inventory = new Inventory(client);
inventory.useItem(Tibia.Constants.Items.Food.WhiteMushroom);
}}}

*VB.Net*
{{{
Dim inventory As New Inventory(client)
inventory.useItem(Tibia.Constants.Items.Food.WhiteMushroom)
}}}

== Attack the first rat found in the battelist ==
*C#*
{{{
BattleList blist = client.getBattleList();
blist.getCreature("rat").attack();
}}}

*VB.Net*
{{{
Dim blist As BattleList = client.getBattleList()
blist.getCreature("rat").attack()
}}}

== Change your players outfit type and addon ==
*C#*
{{{
Player player = client.getPlayer();
player.Outfit = Tibia.Constants.OutfitType.BeggarMale;
player.Addon = Tibia.Constants.OutfitAddon.Both;
}}}

*VB.Net*
{{{
Dim player As Player = client.getPlayer()
player.Outfit = Tibia.Constants.OutfitType.BeggarMale
player.Addon = Tibia.Constants.OutfitAddon.Both
}}}

== Replace all the trees with small fir trees ==
*C#*
{{{
Map map = new Map(client);
map.replaceTrees();
}}}
*VB.Net*
{{{
Dim map As New Map(client)
map.replaceTrees()
}}}

== Make a simple lighthack ==
*C#*
{{{
Player player=client.GetPlayer();
player.Light = Tibia.Constants.LightSize.Full;
player.LightColor = Tibia.Constants.LightColor.White;
}}}

== Draw players hitpoints in percents above his name ==
*C#*
{{{
Player player=client.GetPlayer();
Screen screen = new Screen(client);
screen.DrawCreatureText(player.Id, new Location(0, -10, 0), Color.Green, 
Tibia.Constants.ClientFont.NormalBorder, player.HPBar.ToString() + "%");
}}}