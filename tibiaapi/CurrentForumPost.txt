=================================================
[SIZE=5][COLOR=DarkOrange]TibiaAPI v2.0 [/COLOR][/SIZE][SIZE=3][I]for Tibia 8.11 (and 8.10)[/I][/SIZE]
=================================================

[SIZE=3][COLOR=Orange]About this Release[/COLOR][/SIZE][LIST]
[*]This release marks a history in Tibia programming. Never before has an open source library offered a proxy, allowing you complete control over the data coming in and out of the client. We decided to skip straight to v2.0 because of this huge update.
[*]TibiaAPI's proxy is easy to use, and has very little overhead; everything is implemented asynchronously, so your GUI won't hang.
[*]Hope you enjoy this welcome addition that will make TibiaAPI one of the best tools a Tibia programmer can have!
[*]We also added a MapViewer control to the API a while ago, and this is the first official release that it is included in. I can't wait for someone to build a Allies/Friends map using this control.
[/LIST]

[SIZE=3][COLOR=Orange]About TibiaAPI[/COLOR][/SIZE][LIST]
[*]TibiaAPI is a .NET framework for writing programs that interact with the Tibia Client.
[*]Programmers: If you are interested in helping out with TibiaAPI (adding to the library, bugfixing, etc) please get familiar with the DLL and using it to write programs. Once you create a program using TibiaAPI and publish it, we will be more than happy to have you join the team.
[*]TibiaAPI is open source and available at Google Code [[URL="http://code.google.com/p/tibiaapi"][COLOR=DeepSkyBlue]code.google.com/p/tibiaapi[/COLOR][/URL]]
[*]Authors: Ian and ame, with special thanks to the [URL="http://www.codeplex.com/ktibiax"]KTibiaX[/URL] project and [URL="http://sourceforge.net/projects/evrebot/"]Evremonde[/URL].[/LIST]

[SIZE=3][COLOR=DarkOrange]Documentation[/COLOR][/SIZE][LIST]
[*]You can find a current version of the documentation in html form at my personal website: [URL="http://ianobermiller.com/tibiaapi/doc/namespace_tibia.html"][COLOR=DeepSkyBlue]http://ianobermiller.com/tibiaapi/doc[/COLOR][/URL]
[*]You can also view a list of the most important TibiaAPI objects and methods at Google Code:  [URL="http://code.google.com/p/tibiaapi/wiki/Features"][COLOR=DeepSkyBlue]http://code.google.com/p/tibiaapi/wiki/Features[/COLOR][/URL]
[*]In order to view the most recent documentation properly, it must be checked out of the SVN. See [URL="http://code.google.com/p/tibiaapi/source"][COLOR=DeepSkyBlue]http://code.google.com/p/tibiaapi/source[/COLOR][/URL] for more information.
[*]The best way to find out what TibiaAPI offers is to download it yourself and check out the autocompletion in Visual Studio (or your IDE of choice).[/LIST]

[SIZE=3][COLOR=DarkOrange]Downloads [/COLOR][/SIZE][[URL="http://code.google.com/p/tibiaapi/downloads/list"][COLOR=DeepSkyBlue]Complete Listing[/COLOR][/URL]]
[LIST]
[*][URL="http://tibiaapi.googlecode.com/files/TibiaAPI_v2.0_04-13-08.zip"][COLOR=DeepSkyBlue]TibiaAPI v2.0 DLL[/COLOR][/URL] - Inside you will find a readme for use with Visual Studio and the latest Packet.dll
[*][URL="http://tibiaapi.googlecode.com/files/Example_SmartRunemaker.zip"][COLOR=DeepSkyBlue]Example 1 - Smart Runemaker[/COLOR][/URL] - a fully functional, easy to use runemaker using TibiaAPI, by Ian [this is the descendant of a long line of TPR's and TibIan Runemakers....]
[*][URL="http://tibiaapi.googlecode.com/files/Example_Healbot.zip"][COLOR=DeepSkyBlue]Example 2 - Healbot[/COLOR][/URL] - a sample program showing healing, by ame
[*]You can find many more examples at the [URL="http://code.google.com/p/tibiaapi/downloads/list"][COLOR=DeepSkyBlue]Google Code download page[/COLOR][/URL].
[/LIST]

[SIZE=3][COLOR=DarkOrange]Issues and Ideas[/COLOR][/SIZE]
[LIST]
[*]Please see this thread: [URL="http://tpforums.org/forum/showthread.php?t=1480"][COLOR=DeepSkyBlue] TibiaAPI Ideas/Suggestions/Comments[/COLOR][/URL]
[/LIST]

[SIZE=3][COLOR=DarkOrange]Upcoming[/COLOR][/SIZE]
[LIST]
[*]We want your suggestions on what to include now that we have a proxy! See here: [URL="http://tpforums.org/forum/showthread.php?t=1499"][COLOR=DeepSkyBlue]TibiaAPI has a working Proxy! Ideas?[/COLOR][/URL]
[*]One of our top priorities is building a database of all the packets, in a nice OO manner.
[*]We will also be adding many more events to the proxy based on the packet library.
[*]The documentation is already uploaded, but the page on the wiki is a bit old. We'll get to that soon.
[/LIST]

[SIZE=3][COLOR=DarkOrange]Change Log[/COLOR][/SIZE][LIST]
[*]2.0
	[LIST]
		[*]Added Proxy with sending, recieving, and blocking of packets. It is completely asynchronous and multi-client compatible.(see example code below)
		[*]Added MapViewer
		[*]Added GetTiles function to the Map object. Has the option to scan only the current floor. Useful for a fisher.
		[*]Added getting/setting of client FPS
		[*]Added a mouse hook
		[*]Added GetTilesWithinView method to Map
		[*]Added Map Merger utility
		[*]Fixed: MapViewer no longer flickers
		[*]Fixed: item.OpenContainer
		[*]Fixed: Changed several Client methods to properties (LoggedIn, FPS, RSA, IsActive, Title, see documentation for all of them)
		[*]Fixed: inventory.FindItem now has the option to check slots.
		[*]Fixed: Merged Slot object with Inventory, moved GetSlot from client to inventory
		[*]Fixed: Moved hotkey functions to inventory.UseItem, UseItemOnSelf, and UseItem(id, creatureId)
		[*]Fixed: Renamed item.Id to Item.Number, item.Id is now the tile id
		[*]Fixed using an Item on the ground (ex. fishing)
		[*]Fixed: ClientChooser smart option was not being recognized.
	[/LIST]
[*]1.4
	[LIST]
		[*]Added name and floor spy functions to Map (ShowNames and ShowFloor)
		[*]Added UseOnSelf function to Item
		[*]Added GetPartyMembers to Battlelist, including a function that gets all party members with HP bar less than or equal to the specified percentage
		[*]Added ExpLeft function to Player
		[*]Fixed Use functions in Item to work with fluids
		[*]Added SetTitle to Client
		[*]Fixed the RSA and LoginCharList values to 8.1
		[*]Added OutfitTypes from the update (thanks TTB)
		[*]Added a Calculate class to utility, containing methods for calculating statistics. At the moment it calculates the exp needed for a level
		[*]Fixed ability to read long strings
		[*]Fixed read/write of IsWalking and IsVisible (they were read/writing integers when it should be bytes
	[/LIST]
[*]v1.3
	[LIST]
		[*]Finished updating addresses to 8.10 (thanks TibiaAuto!)
		[*]Added IsActive method to Client.
		[*]Added IsAttacking() method to Objects/Creature.cs.
		[*]Added Stack method to Inventory.
		[*]Added option to change the ClientChooser title.
		[*]Added some tiles to Constants/Tiles.cs.
		[*]Fixed GetContainers and GetItems to reverse the list so it is read in the correct direction; (0,0) is first.
		[*]Fixed KeyboardHook and made it user friendly (see example code below).
		[*]Fixed read/write function names in Objects/Client.cs to PascalCase.
		[*]Fixed using/moving items (client wasn't getting set).[/LIST] 
[*]v1.2
	[LIST]
		[*]Added support for Tibia 8.10
		[*]Added GoTo a location (similar to clicking a square)
		[*]Added VipList objects and methods
		[*]Added functions to Objects.Battlelist for finding creatures by name while ignoring spaces
		[*]Added getVersion to Objects.Client
		[*]Added support for multiple Tibia versions (currently 8.10 and 8.00) via Tibia.Version.Set(string version)
		[*]Added support for the Target CreatureType
		[*]Fixed SetServer and SetOT
		[*]Fixed makeRune to check hands better and move around items, as welll as making the soul point check optional.
		[*]Fixed memory read/write for client to only open the handle once (when the client object is created)
		[*]Fixed use item on ground packet structure
	[/LIST] 
[*]v1.1
	[LIST]
		[*]Added server/port changer to connect to OT servers
		[*]Added ability to change the RSA key
		[*]Fixed outfit addon and type to use enum
		[*]Added function map.replaceTrees();
	[/LIST] 
[*]v1.0
	[LIST]
		[*]Initial release
	[/LIST]
[/LIST]

[SIZE=3][COLOR=DarkOrange]Code Samples[/COLOR][/SIZE]
[LIST]
[*]Get a client object to work with
[code]
Client client = ClientChooser.ShowBox();
[/code]

[*]Using the proxy
[code]
// Start the proxy and attach event handlers
// Put this in Form_Load
client.StartProxy();
client.Proxy.PacketFromClient += (Proxy.PacketListener)PacketFromClient;
client.Proxy.PacketFromServer += (Proxy.PacketListener)PacketFromServer;

// Sample event handlers
private byte[] PacketFromClient(byte[] packet)
{
    LogPacket(packet, "CLIENT");
    return packet;
}

private byte[] PacketFromServer(byte[] packet)
{
    LogPacket(packet, "SERVER");
    return packet;
}

private void LogPacket(byte[] packet, string from)
{
    uxPackets.Invoke(new EventHandler(delegate
    {
        string s = "from " + from + Environment.NewLine;
s += Packet.ByteArrayToHexString(packet) + Environment.NewLine + Environment.NewLine;
    }));
}
[/code]

[*]Perform name spy or level spy
[code]
// Create a new map object
Map map = new Map(client);

// Show names on other floors
map.ShowNames(true);

// Move the screen to the floor below
map.ShowFloor(-1, true);
[/code]

[*]Setup a global keyboard hook. Put the following in a button's click event. This example captures the hotkey Ctrl + Alt + A in the Tibia client only (doesn't let it go to the client). All other keypresses, client or otherwise, are ignored. 
[code]
if (!KeyboardHook.Enabled)
{
     KeyboardHook.Enable();
     KeyboardHook.KeyDown = null;
     KeyboardHook.KeyDown += new KeyboardHook.HookHandler(delegate(Keys key)
     {
          if (client.IsActive())
          {
                if (KeyboardHook.Control && KeyboardHook.Alt && key == Keys.A)
                {
                     string text = "You want to capture the hotkey " +
                          KeyboardHook.KeyToString(key) + " in Tibia!";
                     MessageBox.Show(text);
                     return false;
                }
          }
          return true;
     });
     KeyboardHook.KeyDown += null;
}
else
{
     KeyboardHook.Disable();
}
[/code]
[*]Connect to an OT Server
[code]
client.SetOT("radonia.net", 7171);
[/code]
[*]Eat a mushroom in your inventory
[code]
Inventory inventory = new Inventory(client);
inventory.findItem(Tibia.Constants.Items.Food.WhiteMushroom).use();
[/code]
[*]Attack the first rat found in the battelist
[code]
BattleList blist = client.getBattleList();
blist.getCreature("rat").attack();
[/code]
[*]Change your players outfit type and addon.
[code]
Player player = client.getPlayer();
player.Outfit = Tibia.Constants.OutfitType.BeggarMale;
player.Addon = Tibia.Constants.OutfitAddon.Both;
[/code]
[*]Replace all the trees with small fir trees.
[code]
Map map = new Map(client);
map.replaceTrees();
[/code][/LIST]